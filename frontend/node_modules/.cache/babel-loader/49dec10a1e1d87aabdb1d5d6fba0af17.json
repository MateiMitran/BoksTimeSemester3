{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:8080/api/fights/';\nconst SEARCH_URL = 'http://localhost:8080/api/fight/';\nconst ID_URL = 'http://localhost:8080/api/fight/id/';\nconst CREATE_URL = 'http://localhost:8080/api/fight/create/';\nconst PICTURE_URL = 'http://localhost:8080/api/fight/';\nconst TITLE_URL = 'http://localhost:8080/api/fight-with-name/';\n\nclass FightService {\n  getFights() {\n    return axios.get(API_URL, {\n      headers: authHeader()\n    });\n  }\n\n  searchFights(title) {\n    return axios.get(SEARCH_URL + title, {\n      headers: authHeader()\n    });\n  }\n\n  getFight(id) {\n    return axios.get(ID_URL + id, {\n      headers: authHeader()\n    });\n  }\n\n  getFightWithTitle(title) {\n    return axios.get(TITLE_URL + title + '/get-fight/', {\n      headers: authHeader()\n    });\n  }\n\n  getPicture(id) {\n    return axios.get('http://localhost:8080/api/fight/' + id + '/image/', {\n      headers: authHeader()\n    }).then(response => Buffer.from(response.data, 'binary').toString('base64'));\n  }\n\n  incrementViews(id) {\n    return axios.post(SEARCH_URL + id + '/increment-views/', \"\", {\n      headers: authHeader()\n    });\n  }\n\n  createFight(title, embedId, description) {\n    return axios.post(CREATE_URL, {\n      title,\n      embedId,\n      description\n    }, {\n      headers: authHeader()\n    });\n  }\n\n  addPicture(fightId, picture) {\n    var formData = new FormData();\n    formData.append(\"file\", picture, \"file\");\n    return axios.post(PICTURE_URL + fightId + '/setImage/', formData, {\n      headers: authHeader()\n    });\n  }\n\n  addFighters(fightId, fighter1Id, fighter2Id) {\n    return axios.post(SEARCH_URL + fightId + \"/add-fighters/\" + fighter1Id + \"/\" + fighter2Id, \"\", {\n      headers: authHeader()\n    });\n  }\n\n  getFightsFromBoxer(name) {\n    return axios.get(API_URL + name, {\n      headers: authHeader()\n    });\n  }\n\n}\n\nexport default new FightService();","map":{"version":3,"sources":["C:/Users/matei/Desktop/BoksTime/sem3_individualtrackproject_4207734/frontend/src/services/fight.service.js"],"names":["axios","authHeader","API_URL","SEARCH_URL","ID_URL","CREATE_URL","PICTURE_URL","TITLE_URL","FightService","getFights","get","headers","searchFights","title","getFight","id","getFightWithTitle","getPicture","then","response","Buffer","from","data","toString","incrementViews","post","createFight","embedId","description","addPicture","fightId","picture","formData","FormData","append","addFighters","fighter1Id","fighter2Id","getFightsFromBoxer","name"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080/api/fights/';\r\nconst SEARCH_URL = 'http://localhost:8080/api/fight/';\r\nconst ID_URL = 'http://localhost:8080/api/fight/id/';\r\nconst CREATE_URL = 'http://localhost:8080/api/fight/create/';\r\nconst PICTURE_URL = 'http://localhost:8080/api/fight/';\r\nconst TITLE_URL = 'http://localhost:8080/api/fight-with-name/'\r\n\r\nclass FightService {\r\n\r\n    getFights() {\r\n        return axios.get(API_URL, {headers: authHeader()});\r\n      }\r\n\r\n    searchFights(title) {\r\n      return axios.get(SEARCH_URL + title, {headers: authHeader()});\r\n    }\r\n    getFight(id) {\r\n      return axios.get(ID_URL + id, {headers:authHeader()});\r\n    }\r\n\r\n    getFightWithTitle(title) {\r\n      return axios.get(TITLE_URL + title + '/get-fight/', {headers:authHeader()});\r\n    }\r\n\r\n    getPicture(id) {\r\n      return axios.get('http://localhost:8080/api/fight/' + id + '/image/', {headers: authHeader()}) \r\n      .then(response => Buffer.from(response.data, 'binary').toString('base64'));\r\n    }\r\n\r\n    incrementViews(id) {\r\n      return axios.post(SEARCH_URL+ id + '/increment-views/', \"\", {headers:authHeader()});\r\n    }\r\n\r\n    createFight(title,embedId,description) {\r\n      return axios.post(CREATE_URL, {title, embedId, description}, {headers: authHeader()});\r\n    }\r\n    \r\n    addPicture(fightId, picture) {\r\n      var formData = new FormData();\r\n      formData.append(\"file\",picture,\"file\");\r\n      return axios.post(PICTURE_URL+fightId+'/setImage/', formData,{headers: authHeader()});\r\n    }\r\n    \r\n    addFighters(fightId, fighter1Id, fighter2Id) {\r\n      return axios.post(SEARCH_URL + fightId + \"/add-fighters/\" + fighter1Id + \"/\" + fighter2Id , \"\", {headers: authHeader()});\r\n    }\r\n\r\n    getFightsFromBoxer(name) {\r\n      return axios.get(API_URL + name, {headers:authHeader()});\r\n    }\r\n\r\n}\r\n\r\nexport default new FightService();"]},"metadata":{},"sourceType":"module"}