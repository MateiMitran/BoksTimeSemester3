{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matei\\\\Desktop\\\\BoksTime\\\\sem3_individualtrackproject_4207734\\\\frontend\\\\src\\\\components\\\\chat.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SockJS from 'sockjs-client';\nimport Stomp from 'stompjs';\nimport AuthService from '../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ENDPOINT = \"http://localhost:8080/ws\";\n\nfunction Chat() {\n  _s();\n\n  const [stompClient, setStompClient] = useState(null);\n  const [chatToDisplay, setChatToDisplay] = useState([]);\n  const [msgToSend, setSendMessage] = useState({\n    content: \"\",\n    username: AuthService.getUsername()\n  });\n  const chatMessages = [];\n  useEffect(() => {\n    const socket = SockJS(ENDPOINT);\n    const stompClient = Stomp.over(socket);\n    stompClient.connect({}, () => {\n      // subscribe to the backend\n      stompClient.subscribe('/topic/public', data => {\n        // console.log(data.body);\n        onMessageReceived(data);\n        chatMessages.push(JSON.parse(data.body));\n        setChatToDisplay(chatMessages); // console.log(chatMessages);\n      });\n    });\n    setStompClient(stompClient); // eslint-disable-next-line\n  }, []); // display the received data\n\n  function onMessageReceived(data) {\n    // eslint-disable-next-line\n    const result = JSON.parse(data.body);\n  }\n\n  ;\n\n  function send() {\n    // chatMessages.push(msgToSend);\n    stompClient.send(\"/app/chat.send\", {}, JSON.stringify({\n      'content': msgToSend.content,\n      'username': msgToSend.username\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatMessageContainer\",\n      children: [chatToDisplay.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singleMessageContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Username: \", item.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.content\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this), console.log(item.username)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 34\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: chatMessages[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMessageActions\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatMessageInput\",\n          onChange: event => setSendMessage({ ...msgToSend,\n            content: event.target.value\n          }),\n          placeholder: \"Type your message here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonSendChatMessage userAddButton\",\n          onClick: send,\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"dx8h0LBAde2CWwMrPHClZgbdazk=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/matei/Desktop/BoksTime/sem3_individualtrackproject_4207734/frontend/src/components/chat.component.js"],"names":["React","useState","useEffect","SockJS","Stomp","AuthService","ENDPOINT","Chat","stompClient","setStompClient","chatToDisplay","setChatToDisplay","msgToSend","setSendMessage","content","username","getUsername","chatMessages","socket","over","connect","subscribe","data","onMessageReceived","push","JSON","parse","body","result","send","stringify","map","item","console","log","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SockJS from 'sockjs-client';\r\nimport Stomp from 'stompjs';\r\nimport AuthService from '../services/auth.service';\r\n\r\n\r\nconst ENDPOINT = \"http://localhost:8080/ws\";\r\n\r\nfunction Chat() {\r\n\r\n    const [stompClient, setStompClient] = useState(null);\r\n    const [chatToDisplay, setChatToDisplay] = useState([]);\r\n    const [msgToSend, setSendMessage] = useState({\r\n        content: \"\",\r\n        username: AuthService.getUsername()\r\n    });\r\n    const chatMessages = [];\r\n\r\n\r\n    useEffect(() => {\r\n        const socket = SockJS(ENDPOINT);\r\n        const stompClient = Stomp.over(socket);\r\n        stompClient.connect({}, () => {\r\n            // subscribe to the backend\r\n            stompClient.subscribe('/topic/public', (data) => {\r\n                // console.log(data.body);\r\n                onMessageReceived(data);\r\n                chatMessages.push(JSON.parse(data.body));\r\n                setChatToDisplay(chatMessages);\r\n                // console.log(chatMessages);\r\n            });\r\n        });\r\n        setStompClient(stompClient);\r\n         // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    // display the received data\r\n    function onMessageReceived(data) {\r\n         // eslint-disable-next-line\r\n        const result = JSON.parse(data.body);\r\n    };\r\n\r\n    function send() {\r\n        // chatMessages.push(msgToSend);\r\n        stompClient.send(\"/app/chat.send\", {}, JSON.stringify({ 'content': msgToSend.content, 'username': msgToSend.username }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n\r\n            <div className='chatMessageContainer'>\r\n                {\r\n                    chatToDisplay.map((item) => {\r\n                         return (<div className='singleMessageContainer'>\r\n                            <h4>Username: {item.username}</h4>\r\n                            <p key={item}>{item.content}</p>\r\n                            {console.log(item.username)}\r\n                        </div>);\r\n                    })\r\n\r\n                }\r\n                <p>{chatMessages[0]}</p>\r\n                <div className='chatMessageActions'>\r\n                    <input className='chatMessageInput' onChange={(event) => setSendMessage({...msgToSend, content: event.target.value})} placeholder='Type your message here...'></input>\r\n\r\n                    <button className='buttonSendChatMessage userAddButton' onClick={send}>Send Message</button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}